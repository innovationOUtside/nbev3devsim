/* We want a responsive layout,
   but a minimum width is sensible? */
.roboSim {
  min-width: 200px;
}

.roboSim button {
  background: AliceBlue;
  border-radius: 12px;
  border-color: lightblue;
}

.row {
  display: flex;
  justify-content: space-between;
  width: 1181;
  /* margin-top: 0.5em; */
  margin: 0.2em 0;
}


.rs-grouped-controls legend, .rs-world legend {
  margin-bottom: 0px;
  border-bottom: none;
  width: auto;
  font-size: inherit;
  padding: 0.5rem;
  color: cornflowerblue;
}

.rs-grouped-controlset {
  flex-direction: row;
  flex-wrap: wrap;
  flex-basis: auto;
  justify-content: space-between;
}

.menu {
  display: flex;
  align-items: center;
}

.menu > div {
  color: blue;
  font-size: 200%;
  padding: 0.5em;
  border-radius: 0.5em 0.5em 0 0;
  cursor: pointer;
}

.menu > div:hover {
  background: lightcoral;
  color: white;
}

.right {
  text-align: right;
  display: flex;
}

.right > div {
  margin-right: 1em;
}

.right input[type="number"] {
  width: 4em;
  text-align: right;
}

#output {
  border: solid 1px black;
  flex-grow: 1;
  flex-shrink: 1;
  margin-top: 0;
  margin-left: 1em;
  padding: 0.5em;
  background: black;
  color: white;
  overflow-y: scroll;
  overflow-x: hidden;
  height: 24em;
  white-space: pre-wrap;
  font-size: 13px;
}

#output > .error {
  color: pink;
}

#editor {
  width: 100%;
}

#pythonCode {
  width: 100%;
  height: 300px;
}

#editor.large {
  width: 55em;
}

#editor.long > #pythonCode {
  height: 95vh;
}

#editor.large > #pythonCode {
  font-size: 120%;
}

.buttons {
  display: flex;
  justify-content: space-between;
  margin-top: 0.2em;
  width: 100%;
  align-items: baseline;
}

.sensorReading {
  border: 1px solid blue;
}

#sensorArray {
  border: 1px solid black;
}

.checkboxLabel {
  border: 1px solid grey;
}

.sensorGrid {
  width: 150px;
  height: 150px;
}

#sensorArrayLeft {
  border: 2px solid red;
}
#sensorArrayRight {
  border: 2px solid green;
}

toggle-switch span, value-slider span {white-space: nowrap;}
/*
#robotConfigurator,
#obstaclesConfigurator,
#codeDisplay {
  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  top: 50px;
  width: 80%;
  height: 80%;
  border: solid 2px black;
  border-radius: 0.5em;
  padding: 0.5em;
  box-sizing: border-box;
  transition: top 0.5s;
}

#robotConfigurator {
  background: lightblue;
}

#obstaclesConfigurator {
  background: lightsalmon;
}

#codeDisplay {
  background: rgb(174, 231, 174);
}

#obstaclesConfigurator .content {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

#robotConfiguratorEditor,
#obstaclesConfiguratorEditor,
#codeDisplayCode {
  background: white;
  width: 100%;
  height: 100%;
  resize: none;
}

#window {
  position: absolute;
  display: flex;
  flex-direction: column;
  top: 200px;
  left: 100;
  width: 881;
  height: 400;
  background: lightcoral;
  border: solid 2px black;
  border-radius: 0.5em;
  padding: 0.5em;
  box-sizing: border-box;
  transition: top 0.5s;
}

#window > .content {
  height: 100%;
  width: 100%;
  background: white;
  overflow-y: auto;
  padding: 0.5em;
  box-sizing: border-box;
}
#window > .windowRow {
  width: 100%;
  margin-top: 0.5em;
  display: flex;
  justify-content: center;
}
#window table {
  width: 100%;
  border: solid 1px gray;
  border-spacing: 0;
}
#window td {
  padding: 0.5em;
}
#window thead {
  background: lightgray;
  font-weight: bold;
}
#window thead th {
  border-top: solid 4px gray;
  border-bottom: solid 2px gray;
  padding: 0.5em 0;
}
#window tbody td {
  border-top: solid 1px lightgray;
  border-left: solid 1px lightgray;
}
#window tbody tr:first-child td {
  border-top: 0;
}
#window tbody td:first-child {
  border-left: 0;
  padding-left: 2em;
}
#window tbody td.section {
  font-weight: bold;
  padding-left: 0.5em;
}

.closed {
  top: -2000px !important;
}


#run {
  background-color: yellow;
}
*/

#background {
  image-rendering: pixelated;
  image-rendering: -moz-crisp-edges;
  image-rendering: crisp-edges;
}

/*--- Toggle switch - Nick Freear*/
x-switch {
  zoom: 1;
}

toggle-switch {
  display: inline-block;
  padding: 0.7rem;
}

toggle-switch label {
  color: navy;
}

toggle-switch.rs-toggle-button {
  padding: 2px;
}

.rs-toggle-group {
  border: 1px solid lightblue;
  border-radius: 12px;
  padding: 1rem;
  margin: 1rem;
}

/*
button.x-switch {
  margin: 0;
  padding: 0;
  width: 6rem;
  height: 2rem;
  border: 2px solid black;
  display: inline-block;
  margin-right: 0.25em;
  line-height: 1.5rem; 
  vertical-align: middle;
  text-align: center;
  font: .9rem sans-serif;
}
*/

button.x-switch span {
  padding: 1px 4px;
  pointer-events: none;
  border-radius: 12px;

}

button.x-switch-text[aria-checked="false"] :first-child,
[role="switch"][aria-checked="true"] :last-child {
  background: cornflowerblue;
  color: white;
  ;
}

button.x-switch-text[role="switch"][aria-checked="false"] :last-child,
[role="switch"][aria-checked="true"] :first-child {
  color: cornflowerblue;
}


button.x-switch-button[role="switch"][aria-checked="true"] {
  background-color: cornflowerblue;
  color: white;
}

button.x-switch-button[role="switch"][aria-checked="false"] {
  background-color: white;
  color: cornflowerblue;
}

/*https://dev.to/erikkroes/accessible-html-toggle-button-switch-o9e*/
button.x-switch-switch {  
  padding: 0;
  width: 3.7em;
  height: 1.5em;
  border: 0;
  border-radius: 1rem;
  background-color: lightgrey;
}

button.x-switch-switch[role="switch"][aria-checked="true"] {
  background-color: #0a0;
}

button.x-switch-switch[role="switch"] span {
  color: white;
  padding: 0.1rem;  
  pointer-events: none;
  border-radius: 2rem;
}

button.x-switch-switch[role="switch"][aria-checked="false"] :last-child {
  padding-left: .2em;
}

button.x-switch-switch[role="switch"][aria-checked="true"] :last-child, button.x-switch-switch[role="switch"][aria-checked="false"] :first-child {
  background: white;
}
/*
label.x-switch {
  font: 1rem sans-serif;
  line-height: 1.5rem;
  user-select: none;
  vertical-align: middle;
} */
/* Also for label.x-switch :
    -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none; */
/*---*/
.toggle-button-on {
  background: green;
  border-radius: 50%;
  display: inline-block;
  height: 1rem;
  width: 1rem;
}
.toggle-button-off {
  background: red;
  border-radius: 50%;
  display: inline-block;
  height: 1rem;
  width: 1rem;
}

.rs-grouped-controls {
  border: 2px solid cornflowerblue;
  padding: 10px;
  border-radius: 12px;
  width:100%;
}

/* LEDs: https://austinrobertson.com/blog/2013/01/30/css-led/ */
/* More LEDs: https://codepen.io/fskirschbaum/pen/MYJNaj */

/* https://cssdeck.com/labs/css-leds */
.led-red {
  float: left;
  margin: 5px;
  width: 12px;
  height: 12px;
  background-color: rgb(173, 51, 13);
  border-radius: 50%;
  box-shadow: #000 0 -1px 7px 1px, inset #600 0 -1px 9px, #f00 0 2px 12px;
}

.led-yellow {
  float: left;
  margin: 5px;
  width: 12px;
  height: 12px;
  background-color: rgb(228, 207, 20);
  border-radius: 50%;
  box-shadow: #000 0 -1px 7px 1px, inset #660 0 -1px 9px, #dd0 0 2px 12px;
}

.led-green {
  float: left;
  margin: 5px;
  width: 12px;
  height: 12px;
  background-color: rgb(18, 250, 18);
  border-radius: 50%;
  box-shadow: #000 0 -1px 7px 1px, inset #460 0 -1px 9px, #7d0 0 2px 12px;
}


/* ------- Handling issues --------- */

/* input[number] doesn't let you limit width as a form control */
input[type=number]{
  width: 7rem;
} 

input[type=range]{
  display: inline-block;
  width: auto;
}

/* Input element overflows parent div - this still doesn't work */
input {
  padding: 0.2em; 
  box-sizing: border-box;
  width: 100% 
} 

/* select elements go large...*/
select {max-height: 3rem;}

toggle-switch input[disabled] {
  color: lightgrey;
}

toggle-switch input[enabled] {
  color: initial;
}

.rs-closed {
  display: none;
}

.rs-open {
  display: block;
}



/*--- prism.css ---/*


/*---- prism.css --*/
/* PrismJS 1.21.0
https://prismjs.com/download.html#themes=prism&languages=markup+css+python&plugins=line-numbers */
/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */
/* PrismJS 1.21.0
https://prismjs.com/download.html#themes=prism&languages=python&plugins=line-numbers */
/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

 code[class*="language-"],
 pre[class*="language-"] {
   color: black;
   background: none;
   text-shadow: 0 1px white;
   font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
   font-size: 1em;
   text-align: left;
   white-space: pre;
   word-spacing: normal;
   word-break: normal;
   word-wrap: normal;
   line-height: 1.5;
 
   -moz-tab-size: 4;
   -o-tab-size: 4;
   tab-size: 4;
 
   -webkit-hyphens: none;
   -moz-hyphens: none;
   -ms-hyphens: none;
   hyphens: none;
 }
 
 pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
 code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
   text-shadow: none;
   background: #b3d4fc;
 }
 
 pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
 code[class*="language-"]::selection, code[class*="language-"] ::selection {
   text-shadow: none;
   background: #b3d4fc;
 }
 
 @media print {
   code[class*="language-"],
   pre[class*="language-"] {
     text-shadow: none;
   }
 }
 
 /* Code blocks */
 pre[class*="language-"] {
   padding: 1em;
   margin: .5em 0;
   overflow: auto;
 }
 
 :not(pre) > code[class*="language-"],
 pre[class*="language-"] {
   background: #f5f2f0;
 }
 
 /* Inline code */
 :not(pre) > code[class*="language-"] {
   padding: .1em;
   border-radius: .3em;
   white-space: normal;
 }
 
 .token.comment,
 .token.prolog,
 .token.doctype,
 .token.cdata {
   color: slategray;
 }
 
 .token.punctuation {
   color: #999;
 }
 
 .token.namespace {
   opacity: .7;
 }
 
 .token.property,
 .token.tag,
 .token.boolean,
 .token.number,
 .token.constant,
 .token.symbol,
 .token.deleted {
   color: #905;
 }
 
 .token.selector,
 .token.attr-name,
 .token.string,
 .token.char,
 .token.builtin,
 .token.inserted {
   color: #690;
 }
 
 .token.operator,
 .token.entity,
 .token.url,
 .language-css .token.string,
 .style .token.string {
   color: #9a6e3a;
   /* This background color was intended by the author of this theme. */
   background: hsla(0, 0%, 100%, .5);
 }
 
 .token.atrule,
 .token.attr-value,
 .token.keyword {
   color: #07a;
 }
 
 .token.function,
 .token.class-name {
   color: #DD4A68;
 }
 
 .token.regex,
 .token.important,
 .token.variable {
   color: #e90;
 }
 
 .token.important,
 .token.bold {
   font-weight: bold;
 }
 .token.italic {
   font-style: italic;
 }
 
 .token.entity {
   cursor: help;
 }
 
 pre[class*="language-"].line-numbers {
   position: relative;
   padding-left: 3.8em;
   counter-reset: linenumber;
 }
 
 pre[class*="language-"].line-numbers > code {
   position: relative;
   white-space: inherit;
 }
 
 .line-numbers .line-numbers-rows {
   position: absolute;
   pointer-events: none;
   top: 0;
   font-size: 100%;
   left: -3.8em;
   width: 3em; /* works for line-numbers below 1000 lines */
   letter-spacing: -1px;
   border-right: 1px solid #999;
 
   -webkit-user-select: none;
   -moz-user-select: none;
   -ms-user-select: none;
   user-select: none;
 
 }
 
   .line-numbers-rows > span {
     display: block;
     counter-increment: linenumber;
   }
 
     .line-numbers-rows > span:before {
       content: counter(linenumber);
       color: #999;
       display: block;
       padding-right: 0.8em;
       text-align: right;
     }
 
 